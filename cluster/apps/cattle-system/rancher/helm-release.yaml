---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rancher
  namespace: cattle-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://releases.rancher.com/server-charts/stable
      chart: rancher
      version: 2.5.9
      sourceRef:
        kind: HelmRepository
        name: rancher-charts
        namespace: flux-system
  values:
    # Additional Trusted CAs.
    # Enable this flag and add your CA certs as a secret named tls-ca-additional in the namespace.
    # See README.md for details.
    additionalTrustedCAs: false

    antiAffinity: preferred
    topologyKey: kubernetes.io/hostname

    # Audit Logs https://rancher.com/docs/rancher/v2.x/en/installation/api-auditing/
    # The audit log is piped to the console of the rancher-audit-log container in the rancher pod.
    # https://rancher.com/docs/rancher/v2.x/en/installation/api-auditing/
    # destination stream to sidecar container console or hostPath volume
    # level: Verbosity of logs, 0 to 3. 0 is off 3 is a lot.
    auditLog:
      destination: sidecar
      hostPath: /var/log/rancher/audit/
      level: 1
      maxAge: 1
      maxBackup: 1
      maxSize: 100

    # As of Rancher v2.5.0 this flag is deprecated and must be set to 'true' in order for Rancher to start
    addLocal: "true"

    # Image for collecting rancher audit logs.
    # Important: update pkg/image/export/main.go when this default image is changed, so that it's reflected accordingly in rancher-images.txt generated for air-gapped setups.
    busyboxImage: busybox
    # Add debug flag to Rancher server
    debug: false
    # When starting Rancher for the first time, bootstrap the admin as restricted-admin
    restrictedAdmin: false
    # Extra environment variables passed to the rancher pods.
    extraEnv:
    - name: CATTLE_TLS_MIN_VERSION
      value: "1.2"

    # Fully qualified name to reach your Rancher server
    hostname: "rancher.${SECRET_DOMAIN}"
    ### ingress ###
    # Readme for details and instruction on adding tls secrets.
    ingress:
      # If set to false, ingress will not be created
      # Defaults to true
      # options: true, false
      enabled: true
      includeDefaultExtraAnnotations: true
      extraAnnotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        kubernetes.io/ingress.class: "nginx"
        forecastle.stakater.com/expose: "true"
      tls:
        # options: rancher, letsEncrypt, secret
        source: rancher
        secretName: tls-rancher-ingress

    ### LetsEncrypt config ###
    # ProTip: The production environment only allows you to register a name 5 times a week.
    #         Use staging until you have your config right.
    letsEncrypt:
      # email: none@example.com
      environment: production
      ingress:
        # options: traefik, nginx
        class: "nginx"
    # If you are using certs signed by a private CA set to 'true' and set the 'tls-ca'
    # in the 'rancher-system' namespace. See the README.md for details
    privateCA: false
    # http[s] proxy server passed into rancher server.
    # proxy: http://<username>@<password>:<url>:<port>
    # comma separated list of domains or ip addresses that will not use the proxy
    noProxy: 127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,.svc,.cluster.local
    # Override rancher image location for Air Gap installs
    rancherImage: rancher/rancher
    # Number of Rancher server replicas. Setting to negative number will dynamically between 0 and the abs(replicas) based on available nodes.
    # of available nodes in the cluster
    replicas: 3
    # Set pod resource requests/limits for Rancher.
    resources: {}
    tls: ingress
    systemDefaultRegistry: ""
    # Set to use the packaged system charts
    useBundledSystemChart: false
    # Certmanager version compatibility
    certmanager:
      version: "v1.4.0"
    # Rancher custom logos persistence
    customLogos:
      enabled: false
      volumeSubpaths:
        emberUi: "ember"
        vueUi: "vue"
      ## Volume kind to use for persistence: persistentVolumeClaim, configMap
      volumeKind: persistentVolumeClaim
      ## Use an existing volume. Custom logos should be copied to the volume by the user
      # volumeName: custom-logos
      ## Just for volumeKind: persistentVolumeClaim
      ## To disables dynamic provisioning, set storageClass: "" or storageClass: "-"
      storageClass: "nfs-client"
      accessMode: ReadWriteOnce
      size: 1Gi
